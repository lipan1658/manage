<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lp.framework.manage.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.lp.framework.manage.model.Role">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_code, role_name, remark, create_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from d_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <select id="selectByPage" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from d_role
    <where>
      <if test="roleCode != null and roleCode != ''">
        role_code like CONCAT('%',#{roleCode},'%')
      </if>
      <if test="roleName != null and roleName != ''">
        AND role_name like CONCAT('%',#{roleName},'%')
      </if>
      <if test="remark != null and remark != ''">
        AND remark like CONCAT('%',#{remark},'%')
      </if>
      <if test="createDateStart != null and createDateStart != ''">
        AND create_date &gt;= #{createDateStart,jdbcType=TIMESTAMP}
      </if>
      <if test="createDateEnd != null and createDateEnd != ''">
        AND create_date &lt;= #{createDateEnd,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from d_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="role_id" keyProperty="roleId" parameterType="com.lp.framework.manage.model.Role" useGeneratedKeys="true">
    insert into d_role (role_code, role_name, remark, 
      create_date)
    values (#{roleCode,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      now())
  </insert>
  <insert id="insertSelective" keyColumn="role_id" keyProperty="roleId" parameterType="com.lp.framework.manage.model.Role" useGeneratedKeys="true">
    insert into d_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleCode != null  and createDateStart != ''">
        role_code,
      </if>
      <if test="roleName != null and createDateStart != ''">
        role_name,
      </if>
      <if test="remark != null and createDateStart != ''">
        remark,
      </if>
      <if test="createDate != null and createDateStart != ''">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleCode != null and roleCode != ''">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null and roleName != ''">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null and remark != ''">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null and createDate != ''">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lp.framework.manage.model.Role">
    update d_role
    <set>
      <if test="roleCode != null and roleCode != ''">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null and roleName != ''">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null and remark != ''">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null and createDate != ''">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lp.framework.manage.model.Role">
    update d_role
    set role_code = #{roleCode,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>